<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Task 2 - Intermediate Web Development | ApexPlanet</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Arial', sans-serif;
            line-height: 1.6;
            color: #333;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        /* Navigation using Flexbox */
        nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            padding: 1rem 2rem;
            border-radius: 15px;
            margin-bottom: 2rem;
        }

        .logo {
            font-size: 1.5rem;
            font-weight: bold;
            color: white;
        }

        .nav-links {
            display: flex;
            list-style: none;
            gap: 2rem;
        }

        .nav-links a {
            color: white;
            text-decoration: none;
            transition: color 0.3s;
        }

        .nav-links a:hover {
            color: #ffdd59;
        }

        /* Main Grid Layout */
        .main-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 2rem;
            margin-bottom: 2rem;
        }

        /* Contact Form Section */
        .form-section {
            background: rgba(255, 255, 255, 0.95);
            padding: 2rem;
            border-radius: 15px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .form-section h2 {
            margin-bottom: 1.5rem;
            color: #333;
            text-align: center;
        }

        .form-group {
            margin-bottom: 1rem;
        }

        .form-group label {
            display: block;
            margin-bottom: 0.5rem;
            font-weight: bold;
            color: #555;
        }

        .form-group input,
        .form-group textarea {
            width: 100%;
            padding: 0.8rem;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-size: 1rem;
            transition: border-color 0.3s;
        }

        .form-group input:focus,
        .form-group textarea:focus {
            outline: none;
            border-color: #667eea;
        }

        .error {
            color: #e74c3c;
            font-size: 0.9rem;
            margin-top: 0.5rem;
            display: none;
        }

        .submit-btn {
            background: linear-gradient(45deg, #667eea, #764ba2);
            color: white;
            padding: 0.8rem 2rem;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 1rem;
            transition: transform 0.3s;
            width: 100%;
        }

        .submit-btn:hover {
            transform: translateY(-2px);
        }

        /* Todo List Section */
        .todo-section {
            background: rgba(255, 255, 255, 0.95);
            padding: 2rem;
            border-radius: 15px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .todo-section h2 {
            margin-bottom: 1.5rem;
            color: #333;
            text-align: center;
        }

        .todo-input-container {
            display: flex;
            gap: 1rem;
            margin-bottom: 1.5rem;
        }

        .todo-input {
            flex: 1;
            padding: 0.8rem;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-size: 1rem;
        }

        .add-btn {
            background: #27ae60;
            color: white;
            padding: 0.8rem 1.5rem;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 1rem;
            transition: background 0.3s;
        }

        .add-btn:hover {
            background: #2ecc71;
        }

        .todo-list {
            list-style: none;
        }

        .todo-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            background: #f8f9fa;
            padding: 1rem;
            margin-bottom: 0.5rem;
            border-radius: 8px;
            border-left: 4px solid #667eea;
            animation: slideIn 0.3s ease-out;
        }

        @keyframes slideIn {
            from {
                opacity: 0;
                transform: translateX(-20px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        .todo-text {
            flex: 1;
            font-size: 1rem;
        }

        .delete-btn {
            background: #e74c3c;
            color: white;
            padding: 0.5rem 1rem;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 0.9rem;
            transition: background 0.3s;
        }

        .delete-btn:hover {
            background: #c0392b;
        }

        /* Success Message */
        .success-message {
            background: #2ecc71;
            color: white;
            padding: 1rem;
            border-radius: 8px;
            margin-top: 1rem;
            display: none;
            text-align: center;
        }

        /* Media Queries for Responsiveness */
        @media (max-width: 768px) {
            .nav-links {
                display: none;
            }

            .main-grid {
                grid-template-columns: 1fr;
            }

            .todo-input-container {
                flex-direction: column;
            }

            .container {
                padding: 10px;
            }

            nav {
                padding: 1rem;
            }
        }

        @media (max-width: 480px) {
            .form-section,
            .todo-section {
                padding: 1rem;
            }

            .todo-item {
                flex-direction: column;
                gap: 0.5rem;
                text-align: center;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Navigation using Flexbox -->
        <nav>
            <div class="logo">ApexPlanet Task 2</div>
            <ul class="nav-links">
                <li><a href="#contact">Contact</a></li>
                <li><a href="#todo">Todo</a></li>
                <li><a href="#about">About</a></li>
            </ul>
        </nav>

        <!-- Main Content using CSS Grid -->
        <div class="main-grid">
            <!-- Contact Form Section -->
            <div class="form-section" id="contact">
                <h2>Contact Form with Validation</h2>
                <form id="contactForm">
                    <div class="form-group">
                        <label for="name">Full Name *</label>
                        <input type="text" id="name" name="name" required>
                        <div class="error" id="nameError">Please enter your full name</div>
                    </div>

                    <div class="form-group">
                        <label for="email">Email Address *</label>
                        <input type="email" id="email" name="email" required>
                        <div class="error" id="emailError">Please enter a valid email address</div>
                    </div>

                    <div class="form-group">
                        <label for="phone">Phone Number</label>
                        <input type="tel" id="phone" name="phone">
                        <div class="error" id="phoneError">Please enter a valid phone number</div>
                    </div>

                    <div class="form-group">
                        <label for="message">Message *</label>
                        <textarea id="message" name="message" rows="4" required></textarea>
                        <div class="error" id="messageError">Please enter your message</div>
                    </div>

                    <button type="submit" class="submit-btn">Send Message</button>
                </form>
                <div class="success-message" id="successMessage">
                    Message sent successfully! Thank you for contacting us.
                </div>
            </div>

            <!-- Dynamic Todo List Section -->
            <div class="todo-section" id="todo">
                <h2>Dynamic Todo List</h2>
                <div class="todo-input-container">
                    <input type="text" class="todo-input" id="todoInput" placeholder="Enter a new task...">
                    <button class="add-btn" onclick="addTodo()">Add Task</button>
                </div>
                <ul class="todo-list" id="todoList">
                    <!-- Dynamic todos will be added here -->
                </ul>
            </div>
        </div>
    </div>

    <script>
        // Form Validation JavaScript
        document.getElementById('contactForm').addEventListener('submit', function(e) {
            e.preventDefault();
            
            let isValid = true;
            
            // Get form elements
            const name = document.getElementById('name');
            const email = document.getElementById('email');
            const phone = document.getElementById('phone');
            const message = document.getElementById('message');
            
            // Reset all error messages
            document.querySelectorAll('.error').forEach(error => {
                error.style.display = 'none';
            });
            
            // Validate name
            if (name.value.trim() === '') {
                document.getElementById('nameError').style.display = 'block';
                isValid = false;
            }
            
            // Validate email
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            if (email.value.trim() === '' || !emailRegex.test(email.value)) {
                document.getElementById('emailError').style.display = 'block';
                isValid = false;
            }
            
            // Validate phone (optional but if provided, should be valid)
            const phoneRegex = /^[\+]?[1-9][\d]{0,15}$/;
            if (phone.value.trim() !== '' && !phoneRegex.test(phone.value.replace(/\s/g, ''))) {
                document.getElementById('phoneError').style.display = 'block';
                isValid = false;
            }
            
            // Validate message
            if (message.value.trim() === '') {
                document.getElementById('messageError').style.display = 'block';
                isValid = false;
            }
            
            // If form is valid, show success message
            if (isValid) {
                document.getElementById('successMessage').style.display = 'block';
                this.reset(); // Clear form
                setTimeout(() => {
                    document.getElementById('successMessage').style.display = 'none';
                }, 3000);
            }
        });

        // Todo List JavaScript - DOM Manipulation
        let todoCount = 0;

        function addTodo() {
            const todoInput = document.getElementById('todoInput');
            const todoText = todoInput.value.trim();
            
            if (todoText === '') {
                alert('Please enter a task!');
                return;
            }
            
            // Create todo item
            const todoList = document.getElementById('todoList');
            const todoItem = document.createElement('li');
            todoItem.className = 'todo-item';
            todoItem.innerHTML = `
                <span class="todo-text">${todoText}</span>
                <button class="delete-btn" onclick="deleteTodo(this)">Delete</button>
            `;
            
            // Add to list
            todoList.appendChild(todoItem);
            
            // Clear input
            todoInput.value = '';
            todoCount++;
            
            // Add some visual feedback
            todoItem.style.transform = 'scale(0.8)';
            setTimeout(() => {
                todoItem.style.transform = 'scale(1)';
                todoItem.style.transition = 'transform 0.3s ease';
            }, 100);
        }

        function deleteTodo(button) {
            const todoItem = button.parentElement;
            todoItem.style.animation = 'slideOut 0.3s ease-out';
            
            setTimeout(() => {
                todoItem.remove();
                todoCount--;
            }, 300);
        }

        // Add keypress event for Enter key on todo input
        document.getElementById('todoInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                addTodo();
            }
        });

        // Add slide out animation
        const style = document.createElement('style');
        style.textContent = `
            @keyframes slideOut {
                to {
                    opacity: 0;
                    transform: translateX(100%);
                }
            }
        `;
        document.head.appendChild(style);

        // Add some demo todos on page load
        window.addEventListener('load', function() {
            const demoTodos = ['Complete ApexPlanet Task 2', 'Practice JavaScript DOM manipulation', 'Build responsive layouts'];
            demoTodos.forEach(todo => {
                document.getElementById('todoInput').value = todo;
                addTodo();
            });
        });
    </script>
</body>
</html>
